---
- name: Ensure packages are installed
  apk:
    name: "{{ item }}"
    upgrade: yes
  with_items:
      - git
      - rsync
      - lzip
      
- name: Install additional packages 
  apk:
    name: "{{ item }}"
    upgrade: yes
  when: additional_packages
  with_items: "{{ additional_packages }}"
  
- name: installing Ruby
  command: "{{rvm_root}}/bin/rvm install {{rvm_default_ruby_version}}"
  register: command_result
  changed_when: "'Already installed' not in command_result.stderr"

- name: setting default Ruby version
  shell: "source {{rvm_init_script}} && rvm use {{rvm_default_ruby_version}} --default executable=/bin/bash"
  register: rvm_select_ruby_version_root
  ignore_errors: true
  changed_when: false

- name: Create symlinks to ruby and gem
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    state: link
  with_items:
    - { src: '{{rvm_root}}/rubies/{{rvm_default_ruby_version}}/bin/ruby', dest: '/usr/local/bin/ruby' }
    - { src: '{{rvm_root}}/rubies/{{rvm_default_ruby_version}}/bin/gem', dest: '/usr/local/bin/gem' }

- name: Creating project_root directory
  file:
    path: /var/www
    state: directory
    mode: 0755

- name: Clean migrations and .tags
  file:
    state: absent
    path:
  with_items:
    - /var/www/db/migrate/

- name: Copy all node data
  command: rsync -auvh --delete --chown=root:root /tmp/railsapp/ /var/www/ --exclude vendor/bundle

- name: Install all gems
  bundler:
    state: present
    gemfile: "/var/www/Gemfile"
    deployment_mode: yes
    clean: yes
    extra_args: "--without development test"
    executable: "/usr/local/bin/bundle"

- name: Remove unnecessary package
  apt:
    name: "{{ item }}"
    state: absent
    autoremove: yes
  with_items:
    - rsync
    - git
    - perl
    - perl
    #- python
    #- python2.7
    #- python3.5

